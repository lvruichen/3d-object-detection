<launch>
    <!-- 是否使用仿真系统里面真实的base_link -->
    <arg name="use_baselink" default="false"/>
    <arg name="hdl" default="false" />
    <arg name="use_rviz" default="false" />
    <arg name="use_gui" default="true" />
    <!-- 将 Urdf 文件的内容加载到参数服务器 -->
    <env name="GAZEBO_MODEL_PATH" value="$(find gazebo_plugin)/models"/>
    <env name="GAZEBO_PLUGIN_PATH" value="$(find gazebo_plugin)/lib"/>
    
    <param name="robot_description" command="$(find xacro)/xacro $(find robot_description)/urdf/diff/robot_with_sensors.urdf.xacro" />
    <!-- 启动 gazebo -->
    <!-- <arg name="world_name" default="$(find cleaningrobot_gazebo)/worlds/test_sensors_0.world" /> -->
    <!-- <arg name="world_name" default="$(find cleaningrobot_gazebo)/worlds/test_sensors.world" /> -->
    <!-- <arg name="world_name" default="$(find cleaningrobot_gazebo)/worlds/movingcar.world" /> -->
    <arg name="world_name" default="$(find gazebo_plugin)/worlds/test_detection.world" />
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- <arg name="world_name" value="$(arg world_name)" /> -->
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="gui" value="true" />
        <arg name="headless" value="false" />
        <arg name="debug" value="false" />
        <arg name="output" value="screen"/>
        <arg name="verbose" value="false"/>
    </include>

    <node pkg="tf2_ros" type="static_transform_publisher" name="sim_baselink_to_baselink" args="0 0 0 0 0 0 /sim/base_link /base_link" if="$(arg use_baselink)"/>
    
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model cleanrobot -param robot_description" />
    
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <param name="tf_prefix" value="sim"/>
    </node>

    <include file="$(find robot_control)/launch/control.launch" />

    <node name="p3d_base_footprint" pkg="robot_utility" type="fromP3dToTF" args="base_footprint" >
        <param name="parent_frame" value="world"/>
        <param name="child_frame" value="/sim/base_footprint"/>
        <param name="topic" value="odom_basefootprint"/>
    </node>

    <node pkg="gazebo_plugin" type="test_detection" name="test_detection_node" output="screen"/>
    
    <remap from="/cmd_vel" to="/nav/cmd_vel"/>
    <node name="tele" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" launch-prefix="gnome-terminal -x"/>
</launch>
